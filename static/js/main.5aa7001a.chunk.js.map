{"version":3,"sources":["components/Navbar/Navbar.module.scss","components/SettingsForm/SettingsForm.module.scss","components/Navbar/Navbar.js","containers/Layout/Layout.js","store/actions/actionTypes.js","const.js","components/SettingsForm/SettingsForm.js","store/actions/settings.js","pages/SettingsPage/SettingsPage.js","components/Modal/Modal.js","components/JSONShowerModal/JSONShowerModal.js","components/QueriesTable/QueriesTable.js","utils.js","store/actions/queries.js","components/Loader/Loader.js","pages/HomePage/HomePage.js","pages/ChangesPage/ChangesPage.js","App.js","serviceWorker.js","store/reducers/settings.js","store/reducers/queries.js","store/reducers/rootReducer.js","store/index.js","index.js","components/Loader/Loader.module.scss"],"names":["module","exports","Navbar","className","css","NavbarWrapper","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","to","exact","Component","Layout","props","fluid","children","SAVE_NEW_DOWNLOAD_URL","RESTORE_DOWNLOAD_URL","DOWNLOAD_QUERIES_CSV_REQUEST","DOWNLOAD_QUERIES_CSV_SUCCESS","DOWNLOAD_QUERIES_CSV_FAILURE","DOWNLOAD_URL","PREVIOUS_LIST_OF_QUERIES","connect","state","downloadUrl","settings","dispatch","saveNewDownloadUrl","url","localStorage","setItem","e","alert","useState","isSaved","toggleSaved","formik","useFormik","initialValues","validationSchema","Yup","shape","required","onSubmit","values","setTimeout","isShowErrors","errors","touched","handleSubmit","htmlFor","name","onBlur","handleBlur","onChange","handleChange","value","autoComplete","disabled","isValid","Transition","in","timeout","savedMark","SettingsPage","Modal","modalRef","createRef","useEffect","$modalEl","$","current","modal","on","closeHandler","show","template","role","ref","title","data-dismiss","aria-hidden","ReactDOM","createPortal","document","getElementById","JSONShowerModal","json","modalBodyRef","$body","jsonFormatter","JSONFormatter","JSON","parse","html","append","render","QueriesTable","data","showModal","setShowModal","jsonToShow","setJsonToShow","map","query","i","errorMessage","key","colSpan","renderRowWithParsingError","request","description","onClick","parameters","slice","concat","parameters_update","j","renderRow","downloadAndParseCSV","Promise","resolve","reject","Papa","delimiter","download","header","skipEmptyLines","transform","split","Date","toLocaleString","complete","results","length","forEach","error","row","message","saveDataToLS","stringify","getChanges","queries","lsData","getItem","previousQueries","_","Loader","loader","ldsRing","overlay","component","HomePage","searchTerm","searchRole","filteredQueries","onFilterChange","event","setState","currentTarget","filterQueries","clearFilters","prevProps","prevState","snapshot","this","isFoundSearchTerm","field","indexOf","isFoundSearchRole","includes","downloadQueriesCSV","isLoading","downloadError","isShowList","renderFilters","placeholder","roles","React","list","getState","a","async","changes","console","log","App","restoreDownloadUrl","path","ChangesPage","process","Boolean","window","location","hostname","match","initialState","handlers","action","combineReducers","DEFAULT","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","thunk","app","basename","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5aa7001a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavbarWrapper\":\"Navbar_NavbarWrapper__1Fhyk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"savedMark\":\"SettingsForm_savedMark__9WRh6\"};","import React, {Component} from 'react';\r\nimport css from './Navbar.module.scss'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nclass Navbar extends Component {\r\n  render() {\r\n    return (\r\n      <div className={`${css.NavbarWrapper} mb-5`}>\r\n        <nav className=\"navbar navbar-expand-lg navbar-light\">\r\n          <a className=\"navbar-brand\" href=\"/\">CSV Explorer</a>\r\n          <button className=\"navbar-toggler\"\r\n                  type=\"button\"\r\n                  data-toggle=\"collapse\"\r\n                  data-target=\"#navbarNav\"\r\n                  aria-controls=\"navbarNav\"\r\n                  aria-expanded=\"false\"\r\n                  aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\" />\r\n          </button>\r\n          <div className=\"collapse navbar-collapse position-relative\" id=\"navbarNav\">\r\n            <ul className=\"navbar-nav ml-auto\">\r\n              <NavLink to=\"/\" exact className=\"nav-link\">\r\n                Home\r\n              </NavLink>\r\n              <li className=\"nav-item\">\r\n                <NavLink to=\"/changes\" exact className=\"nav-link\">\r\n                  Changes\r\n                </NavLink>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <NavLink to=\"/settings\" exact className=\"nav-link\">\r\n                  Settings\r\n                </NavLink>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </nav>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navbar;\r\n","import React from 'react';\r\n// import css from './Layout.module.scss'\r\nimport Navbar from \"../../components/Navbar/Navbar\";\r\n\r\nconst Layout = (props) => {\r\n  const className = props.fluid ? 'container-fluid' : 'container';\r\n\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <div className={className}>\r\n        {props.children}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","export const SAVE_NEW_DOWNLOAD_URL = 'SAVE_NEW_DOWNLOAD_URL';\r\nexport const RESTORE_DOWNLOAD_URL = 'RESTORE_DOWNLOAD_URL';\r\n\r\nexport const DOWNLOAD_QUERIES_CSV_REQUEST = 'DOWNLOAD_QUERIES_CSV_REQUEST';\r\nexport const DOWNLOAD_QUERIES_CSV_SUCCESS = 'DOWNLOAD_QUERIES_CSV_SUCCESS';\r\nexport const DOWNLOAD_QUERIES_CSV_FAILURE = 'DOWNLOAD_QUERIES_CSV_FAILURE';","export const DOWNLOAD_URL = 'DOWNLOAD_URL';\r\nexport const PREVIOUS_LIST_OF_QUERIES = 'PREVIOUS_LIST_OF_QUERIES';","import React, {useState} from 'react';\r\nimport {useFormik} from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport {saveNewDownloadUrl} from \"../../store/actions/settings\";\r\nimport {connect} from \"react-redux\";\r\nimport {Transition} from \"react-transition-group\";\r\nimport css from './SettingsForm.module.scss'\r\n\r\nconst SettingsForm = ({downloadUrl, saveNewDownloadUrl}) => {\r\n  const [isSaved, toggleSaved] = useState(false);\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      url: downloadUrl\r\n    },\r\n    validationSchema: Yup.object().shape({\r\n      url: Yup.string().url().required()\r\n    }),\r\n    onSubmit: values => {\r\n      toggleSaved(true);\r\n      saveNewDownloadUrl(values.url);\r\n\r\n      setTimeout(() => {\r\n        toggleSaved(false);\r\n      }, 1000)\r\n    }\r\n  });\r\n\r\n  const isShowErrors = formik.errors.url && formik.touched.url;\r\n\r\n  //TODO Сделать вывод Saved когда когда урл сохранился\r\n\r\n  return (\r\n    <form onSubmit={formik.handleSubmit}>\r\n      <div className=\"form-group\">\r\n        <label htmlFor=\"url\">URL to CSV File</label>\r\n        <input\r\n          type=\"text\"\r\n          className={`form-control ${isShowErrors ? 'is-invalid' : ''}`}\r\n          name=\"url\"\r\n          id=\"url\"\r\n          onBlur={formik.handleBlur}\r\n          onChange={formik.handleChange}\r\n          value={formik.values.url}\r\n          autoComplete=\"off\"\r\n        />\r\n        {isShowErrors && <small className=\"invalid-feedback\">{formik.errors.url}</small>}\r\n      </div>\r\n      <button className=\"btn btn-primary mr-2\" type=\"submit\" disabled={!formik.isValid}>Save</button>\r\n      <Transition in={isSaved} timeout={500}>\r\n        {state => (\r\n          <span className={`text-muted red ${css.savedMark} ${state}`}>Saved...</span>\r\n        )}\r\n      </Transition>\r\n\r\n    </form>\r\n  );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n      downloadUrl: state.settings.downloadUrl\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n      saveNewDownloadUrl: (url) => dispatch(saveNewDownloadUrl(url))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SettingsForm);\r\n","import {RESTORE_DOWNLOAD_URL, SAVE_NEW_DOWNLOAD_URL} from \"./actionTypes\";\r\nimport {DOWNLOAD_URL} from \"../../const\";\r\n\r\nexport function saveNewDownloadUrl(url) {\r\n  try {\r\n    localStorage.setItem(DOWNLOAD_URL, url);\r\n  } catch (e) {\r\n    alert('LocalStorage Save Error');\r\n    return;\r\n  }\r\n\r\n  return {\r\n    type: SAVE_NEW_DOWNLOAD_URL,\r\n    url\r\n  }\r\n}\r\n\r\nexport function restoreDownloadUrl() {\r\n  const url = localStorage.getItem(DOWNLOAD_URL) || process.env.REACT_APP_DEFAULT_CSV_URL;\r\n\r\n  return {\r\n    type: RESTORE_DOWNLOAD_URL,\r\n    url\r\n  }\r\n}\r\n","import React from 'react';\r\nimport Layout from \"../../containers/Layout/Layout\";\r\nimport SettingsForm from \"../../components/SettingsForm/SettingsForm\";\r\n// import css from './Settings.module.scss'\r\n\r\nconst SettingsPage = (props) => {\r\n  return (\r\n    <Layout>\r\n      <h3>Settings</h3>\r\n      <SettingsForm />\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default SettingsPage;\r\n","import React, {createRef, useEffect} from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport * as $ from 'jquery';\r\nimport PropTypes from \"prop-types\";\r\n// import css from './Modal.module.scss'\r\n\r\nconst Modal = (props) => {\r\n  const modalRef = createRef();\r\n\r\n  useEffect(() => {\r\n    const $modalEl = $(modalRef.current);\r\n\r\n    $modalEl.modal().on('hidden.bs.modal', props.closeHandler);\r\n\r\n    return () => {\r\n      $modalEl.modal('dispose');\r\n    }\r\n  }, [modalRef, props.closeHandler]);\r\n\r\n\r\n  if (!props.show) {\r\n    return null;\r\n  }\r\n\r\n  const template = (\r\n    <div className=\"modal fade\" role=\"dialog\" ref={modalRef}>\r\n      <div className=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\r\n        <div className=\"modal-content\">\r\n          <div className=\"modal-header\">\r\n            <h5 className=\"modal-title\" id=\"exampleModalScrollableTitle\">{props.title}</h5>\r\n            <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n              <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n          </div>\r\n          <div className=\"modal-body\" >\r\n            {props.children}\r\n          </div>\r\n          <div className=\"modal-footer\">\r\n            <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  return ReactDOM.createPortal(\r\n    template,\r\n    document.getElementById('modal-root')\r\n  )\r\n};\r\n\r\nModal.propTypes = {\r\n  show: PropTypes.bool,\r\n  closeHandler: PropTypes.func,\r\n  children: PropTypes.element,\r\n  title: PropTypes.oneOfType([\r\n    PropTypes.string,\r\n    PropTypes.element\r\n  ]),\r\n};\r\n\r\n\r\nexport default Modal;\r\n","import React, {createRef, useEffect} from 'react';\r\nimport * as $ from 'jquery';\r\nimport Modal from \"../Modal/Modal\";\r\nimport JSONFormatter from 'json-formatter-js';\r\nimport * as Proptypes from \"prop-types\";\r\n\r\nconst JSONShowerModal = ({json, ...props}) => {\r\n  const modalBodyRef = createRef();\r\n\r\n  useEffect(() => {\r\n    if (!json) return;\r\n\r\n    const $body = $(modalBodyRef.current);\r\n\r\n    try {\r\n      const jsonFormatter = new JSONFormatter(JSON.parse(json));\r\n\r\n      $body.html('');\r\n      $body.append(jsonFormatter.render());\r\n    } catch (e) {\r\n      $body.html('INVALID JSON');\r\n    }\r\n  }, [modalBodyRef, json]);\r\n\r\n  return (\r\n    <Modal {...props}>\r\n      <div ref={modalBodyRef}>\r\n      </div>\r\n    </Modal>\r\n\r\n  );\r\n};\r\n\r\nJSONShowerModal.propTypes = {\r\n  json: Proptypes.string.isRequired\r\n};\r\n\r\nexport default JSONShowerModal;\r\n","import React, {useState} from 'react';\r\nimport JSONShowerModal from \"../JSONShowerModal/JSONShowerModal\";\r\nimport PropTypes from \"prop-types\";\r\n// import css from './QueriesTable.module.scss'\r\n\r\nconst QueriesTable = ({data}) => {\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [jsonToShow, setJsonToShow] = useState('');\r\n\r\n  const renderRowWithParsingError = (query, i) => (\r\n    <tr key={i}>\r\n      <td>{i + 1}</td>\r\n      <td colSpan=\"5\" className=\"text-danger\">\r\n        Parsing ERROR: {query.errorMessage}\r\n      </td>\r\n    </tr>\r\n  );\r\n\r\n  const renderRow = (query, i) => (\r\n    <tr key={i}>\r\n      <td>{i + 1}</td>\r\n      <td>{query.request}</td>\r\n      <td>{query.description}</td>\r\n      <td>\r\n        <button className={'btn btn-link'} onClick={() => {\r\n          setShowModal(true);\r\n          setJsonToShow(query.parameters);\r\n        }}>\r\n          {query.parameters.slice(0, 25).concat('...')}\r\n        </button>\r\n      </td>\r\n      <td>{query.parameters_update}</td>\r\n      <td>{query.role.map((role, j) => (\r\n        <span className=\"badge badge-info mr-1\" key={j}>{role}</span>\r\n      ))}</td>\r\n    </tr>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <JSONShowerModal show={showModal}\r\n             closeHandler={() => setShowModal(false)}\r\n             json={jsonToShow}\r\n      />\r\n      <table className=\"table\">\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>Request</th>\r\n            <th>Description</th>\r\n            <th>Parameters</th>\r\n            <th>Parameters Update</th>\r\n            <th>Role</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n        {data.map((query, i) => (\r\n          query.errorMessage ? renderRowWithParsingError(query, i) : renderRow(query, i)\r\n        ))}\r\n        </tbody>\r\n      </table>\r\n    </>\r\n  );\r\n};\r\n\r\nQueriesTable.propTypes = {\r\n  data: PropTypes.arrayOf(PropTypes.shape({\r\n    request: PropTypes.string,\r\n    description: PropTypes.string,\r\n    parameters: PropTypes.string,\r\n    parameters_update: PropTypes.string,\r\n    role: PropTypes.array,\r\n  }))\r\n};\r\n\r\nexport default QueriesTable;\r\n","import * as Papa from \"papaparse\";\r\n\r\nexport function downloadAndParseCSV(url) {\r\n  return new Promise((resolve, reject) => {\r\n    Papa.parse(url, {\r\n      delimiter: ';',\r\n      download: true,\r\n      header: true,\r\n      skipEmptyLines: true,\r\n      transform: (value, key) => {\r\n        switch (key) {\r\n          case 'role':\r\n            return value.split(' ');\r\n          case 'parameters_update':\r\n            return (new Date(value)).toLocaleString('ru');\r\n          default:\r\n            return value;\r\n        }\r\n      },\r\n      complete: (results) => {\r\n        const errors = results.errors;\r\n        let data = results.data;\r\n\r\n        if (errors.length) {\r\n          errors.forEach((error) => {\r\n            data[error.row].errorMessage = error.message;\r\n          })\r\n        }\r\n\r\n        resolve(data);\r\n      },\r\n      error: (error) => {\r\n        reject(error);\r\n      }\r\n    });\r\n  })\r\n}","import {\r\n  DOWNLOAD_QUERIES_CSV_FAILURE,\r\n  DOWNLOAD_QUERIES_CSV_REQUEST,\r\n  DOWNLOAD_QUERIES_CSV_SUCCESS,\r\n} from \"./actionTypes\";\r\nimport {downloadAndParseCSV} from \"../../utils\";\r\nimport * as _ from 'lodash';\r\nimport {PREVIOUS_LIST_OF_QUERIES} from \"../../const\";\r\n\r\nexport function downloadQueriesCSV(url) {\r\n  return async (dispatch, getState) => {\r\n    dispatch({type: DOWNLOAD_QUERIES_CSV_REQUEST});\r\n\r\n    const url = getState().settings.downloadUrl;\r\n\r\n    try{\r\n      const data = await downloadAndParseCSV(url);\r\n\r\n      dispatch({\r\n        type: DOWNLOAD_QUERIES_CSV_SUCCESS,\r\n        data,\r\n        changes: getChanges(data),\r\n        roles: collectRoles(data)\r\n      });\r\n\r\n      saveDataToLS(data);\r\n    } catch (e) {\r\n      dispatch({\r\n        type: DOWNLOAD_QUERIES_CSV_FAILURE,\r\n        error: e\r\n      });\r\n\r\n      console.log('downloadQueriesCSV error:', e);\r\n    }\r\n  }\r\n}\r\n\r\nfunction collectRoles(queries) {\r\n  return _.compact(\r\n         _.uniq(\r\n         _.flatMap(\r\n         _.map(queries, 'role'))));\r\n}\r\n\r\nfunction saveDataToLS(data) {\r\n  try {\r\n    localStorage.setItem(PREVIOUS_LIST_OF_QUERIES, JSON.stringify(data));\r\n  } catch (e) {\r\n    //По хорошему тут нужно вывести какую-то ошибку в тостере или тому подобное\r\n    alert('Data is too large to storing in localstorage');\r\n  }\r\n}\r\n\r\nfunction getChanges(queries) {\r\n  const lsData = localStorage.getItem(PREVIOUS_LIST_OF_QUERIES);\r\n  const previousQueries = lsData && JSON.parse(lsData);\r\n\r\n  if (!previousQueries) return [];\r\n\r\n  return _.filter(queries, (query, i) => {\r\n    if (!previousQueries[i]) return true;\r\n\r\n    return JSON.stringify(query) !== JSON.stringify(previousQueries[i]);\r\n  });\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport PropTypes from 'prop-types';\r\nimport css from './Loader.module.scss'\r\n\r\nconst Loader = (props) => {\r\n  if (props.show === false) {\r\n    return null;\r\n  }\r\n\r\n  const loader = (\r\n    <div className={css.ldsRing}>\r\n      <div/>\r\n      <div/>\r\n      <div/>\r\n      <div/>\r\n    </div>\r\n  );\r\n\r\n  const overlay = (\r\n    <div className={css.overlay} />\r\n  );\r\n\r\n  const component = (\r\n    <>\r\n      {loader}\r\n      {overlay}\r\n    </>\r\n  );\r\n\r\n  return ReactDOM.createPortal(\r\n    component,\r\n    document.getElementById('modal-root')\r\n  );\r\n\r\n};\r\n\r\nLoader.propTypes = {\r\n  show: PropTypes.bool\r\n};\r\n\r\nexport default Loader;\r\n","import React from 'react';\r\nimport Layout from \"../../containers/Layout/Layout\";\r\nimport {connect} from \"react-redux\";\r\nimport QueriesTable from \"../../components/QueriesTable/QueriesTable\";\r\nimport {downloadQueriesCSV} from \"../../store/actions/queries\";\r\nimport Loader from \"../../components/Loader/Loader\";\r\nimport * as _ from \"lodash\";\r\n// import css from './HomePage.module.scss'\r\n\r\n\r\nclass HomePage extends React.Component {\r\n  state = {\r\n    searchTerm: '',\r\n    searchRole: '',\r\n    filteredQueries: []\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (this.props.queries !== prevProps.queries) {\r\n      this.filterQueries();\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.filterQueries();\r\n  }\r\n\r\n  filterQueries() {\r\n    const searchRole = this.state.searchRole;\r\n    const searchTerm = this.state.searchTerm;\r\n\r\n    if (!searchRole && !searchTerm) {\r\n      this.setState({\r\n        filteredQueries: this.props.queries\r\n      });\r\n\r\n      return;\r\n    }\r\n\r\n    //TODO По необходимости сделать поиск по текстовым полям регистронезависимым\r\n\r\n    const filteredQueries = _.filter(this.props.queries, (query) => {\r\n      const fields = ['request', 'description', 'parameters', 'parameters_update'];\r\n      const isFoundSearchTerm = !!_.find(fields, (field) => query[field] && query[field].indexOf(searchTerm) !== -1);\r\n      const isFoundSearchRole = searchRole ? query.role && query.role.includes(searchRole) : true;\r\n\r\n      return isFoundSearchTerm && isFoundSearchRole;\r\n    });\r\n\r\n    this.setState({filteredQueries});\r\n  }\r\n\r\n  onFilterChange = (event) => {\r\n    this.setState({[event.currentTarget.name]: event.currentTarget.value}, () => {\r\n      this.filterQueries();\r\n    });\r\n  };\r\n\r\n  clearFilters = () => {\r\n    this.setState({searchTerm: '', searchRole: ''}, () => this.filterQueries());\r\n  };\r\n\r\n  render() {\r\n    const {downloadQueriesCSV, isLoading, downloadError} = this.props;\r\n    const filteredQueries = this.state.filteredQueries;\r\n    const isShowList = !!(this.props.queries.length && !downloadError);\r\n\r\n    const renderError = () => (\r\n      <p className={'text-center text-danger'}>Download CSV Error: {downloadError.message}</p>\r\n    );\r\n\r\n    const renderFilters = (\r\n      <div className=\"row mb-3\">\r\n        <div className=\"col-md-3\">\r\n          <input className=\"form-control\"\r\n                 name=\"searchTerm\"\r\n                 type=\"text\"\r\n                 value={this.state.searchTerm}\r\n                 onChange={this.onFilterChange}\r\n                 placeholder=\"Search by text fields\"\r\n          />\r\n        </div>\r\n        <div className=\"col-md-3\">\r\n          <select\r\n            name=\"searchRole\"\r\n            className=\"form-control\"\r\n            placeholder=\"Role Filter\"\r\n            value={this.state.searchRole}\r\n            onChange={this.onFilterChange}\r\n          >\r\n            <option value=\"\"/>\r\n            {this.props.roles.map(role => (\r\n              <option value={role} key={role}>{role}</option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n        <button className=\"btn btn-secondary\" onClick={this.clearFilters}>Clear</button>\r\n      </div>\r\n    );\r\n\r\n    return (\r\n      <Layout>\r\n        {isLoading && <Loader />}\r\n        <div className=\"d-flex justify-content-between d-flex align-items-center mb-3\">\r\n          <h3 className={'m-0'}>CSV Data</h3>\r\n          <button className={'btn btn-primary'} onClick={_.debounce(() => downloadQueriesCSV(), 250)}>Download CSV</button>\r\n        </div>\r\n        {downloadError && renderError()}\r\n        {isShowList && renderFilters}\r\n        {isShowList && <QueriesTable data={filteredQueries}/>}\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n      queries: state.queries.list,\r\n      isLoading: state.queries.isLoading,\r\n      roles: state.queries.roles,\r\n      downloadError: state.queries.downloadError\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n      downloadQueriesCSV: () => dispatch(downloadQueriesCSV()),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HomePage);\r\n\r\n","import React from 'react';\r\nimport Layout from \"../../containers/Layout/Layout\";\r\nimport QueriesTable from \"../../components/QueriesTable/QueriesTable\";\r\nimport {connect} from \"react-redux\";\r\n// import css from './ChangesPage.module.scss'\r\n\r\nconst ChangesPage = (props) => {\r\n  return (\r\n    <Layout>\r\n      <h3>Changes Page</h3>\r\n      {props.changes.length\r\n        ? <QueriesTable data={props.changes}/>\r\n        : <p className={'text-center'}>No Changes</p>\r\n      }\r\n\r\n    </Layout>\r\n  );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n      changes: state.queries.changes\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {}\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ChangesPage);\r\n","import React from 'react';\nimport './App.scss';\nimport SettingsPage from \"./pages/SettingsPage/SettingsPage\";\nimport HomePage from \"./pages/HomePage/HomePage\";\nimport ChangesPage from \"./pages/ChangesPage/ChangesPage\";\nimport {Redirect, Route, Switch} from \"react-router-dom\";\nimport {restoreDownloadUrl} from \"./store/actions/settings\";\nimport {connect} from \"react-redux\";\n\nclass App extends React.Component{\n  constructor(props) {\n    super(props);\n\n    props.restoreDownloadUrl();\n  }\n\n  render () {\n    return (\n      <div className=\"App\">\n        <Switch>\n          <Route path={'/'} exact component={HomePage} />\n          <Route path={'/changes'} exact component={ChangesPage} />\n          <Route path={'/settings'} exact component={SettingsPage} />\n          <Redirect to={'/'}/>\n        </Switch>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n    return {}\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    restoreDownloadUrl: () => dispatch(restoreDownloadUrl())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\r\n  DOWNLOAD_QUERIES_CSV_SUCCESS,\r\n  RESTORE_DOWNLOAD_URL,\r\n  SAVE_NEW_DOWNLOAD_URL\r\n} from \"../actions/actionTypes\";\r\n\r\nfunction createInitialState() {\r\n  return {\r\n    downloadUrl: \"\"\r\n  }\r\n}\r\n\r\nconst initialState = createInitialState();\r\n\r\nconst handlers = {\r\n  [RESTORE_DOWNLOAD_URL]: (state, action) => ({...state, downloadUrl: action.url}),\r\n  [SAVE_NEW_DOWNLOAD_URL]: (state, action) => ({...state, downloadUrl: action.url}),\r\n  [DOWNLOAD_QUERIES_CSV_SUCCESS]: (state, action) => ({\r\n    ...state,\r\n    data: action.data,\r\n    isLoading: false,\r\n    downloadError: null\r\n  }),\r\n  DEFAULT: state => state\r\n};\r\n\r\nexport default function settingsReducer(state = initialState, action) {\r\n  const handler = handlers[action.type] || handlers.DEFAULT;\r\n  return handler(state, action);\r\n}","import {\r\n  DOWNLOAD_QUERIES_CSV_FAILURE,\r\n  DOWNLOAD_QUERIES_CSV_REQUEST, DOWNLOAD_QUERIES_CSV_SUCCESS\r\n} from \"../actions/actionTypes\";\r\n\r\nfunction createInitialState() {\r\n  return {\r\n    isLoading: false,\r\n    list: [],\r\n    roles: [],\r\n    changes: [],\r\n    downloadError: null\r\n  }\r\n}\r\n\r\nconst initialState = createInitialState();\r\n\r\nconst handlers = {\r\n  [DOWNLOAD_QUERIES_CSV_REQUEST]: (state) => ({...state, isLoading: true}),\r\n  [DOWNLOAD_QUERIES_CSV_FAILURE]: (state, action) => ({\r\n    ...state,\r\n    isLoading: false,\r\n    downloadError: action.error\r\n  }),\r\n  [DOWNLOAD_QUERIES_CSV_SUCCESS]: (state, action) => ({\r\n    ...state,\r\n    list: action.data,\r\n    changes: action.changes,\r\n    roles: action.roles,\r\n    isLoading: false,\r\n    downloadError: null\r\n  }),\r\n  DEFAULT: state => state\r\n};\r\n\r\nexport default function queriesReducer(state = initialState, action) {\r\n  const handler = handlers[action.type] || handlers.DEFAULT;\r\n  return handler(state, action);\r\n}","import {combineReducers} from \"redux\";\r\nimport settingsReducer from \"./settings\";\r\nimport queriesReducer from \"./queries\";\r\n\r\nexport default combineReducers({\r\n  settings: settingsReducer,\r\n  queries: queriesReducer\r\n});","import {createStore, compose, applyMiddleware} from 'redux';\r\n\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from \"./reducers/rootReducer\";\r\n\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nexport const store = createStore(rootReducer, /* preloadedState, */ composeEnhancers(\r\n  applyMiddleware(\r\n    thunk,\r\n  )\r\n));","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport {Provider} from \"react-redux\";\n\nimport {BrowserRouter} from \"react-router-dom\";\n\nimport './config';\nimport {store} from './store';\n\nconst app = (\n  <Provider store={store}>\n    <BrowserRouter basename=\"/csv-explorer\">\n      <App />\n    </BrowserRouter>\n  </Provider>\n);\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ldsRing\":\"Loader_ldsRing__3PgLk\",\"lds-ring\":\"Loader_lds-ring__32zUL\",\"overlay\":\"Loader_overlay__17bnT\",\"local\":\"Loader_local__Pa0AV\"};"],"sourceRoot":""}